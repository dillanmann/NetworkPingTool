@page "/"
@using NetworkPingTool.Shared.Components
@using NetworkPingTool.Shared.Validators;
@using NetworkPingTool.ViewModels;

@inherits BasePage<IndexViewModel>

<PageTitle>Index</PageTitle>

<div>
    <MudTabs Outlined="false">
        <MudTabPanel Text="Ping Tool" Icon="@Icons.Material.Filled.NetworkPing">
            <MudGrid>
                <MudItem xs="12" Class="mt-0">
                    <MudText Typo="Typo.h6" Color="Color.Primary">Ping IP Addresses</MudText>
                </MudItem>
                @foreach (var pingingAddress in ViewModel.IpAddresses)
                {
                    <MudItem xs="2" my="0">
                        <PingingIpAddressCard IpAddress="@pingingAddress.IpAddress"
                                      Label="@pingingAddress.Label"
                                      IsActive="@pingingAddress.IsActive"
                                      MinRoundTripTime="@pingingAddress.MinRoundTripTime"
                                      MaxRoundTripTime="@pingingAddress.MaxRoundTripTime"
                                      AverageRoundTripTime="@pingingAddress.AverageRoundTripTime"
                                      CurrentRoundTripTime="@pingingAddress.CurrentRoundTripTime"
                                      HealthStatus="@pingingAddress.HealthStatus"
                                      TotalPings="@pingingAddress.TotalPings"
                                      TotalFailures="@pingingAddress.TotalFailures"
                                      OnPlayClicked="async () => await ViewModel.StartPingingAddress(pingingAddress)"
                                      OnStopClicked="async () => await ViewModel.StopPingingAddress(pingingAddress)"
                                      OnDeleteClicked="async () => await ViewModel.DeleteIpAddress(pingingAddress)"
                                      OnDnsChanged="(value) => pingingAddress.IsDnsAddress = value"
                                      OnLabelChanged="(value) => pingingAddress.Label = value"
                                      Results="@pingingAddress.Results"/>
                    </MudItem>
                }
                <MudItem xs="11" Class="d-flex align-center">
                    <MudTextField @bind-Text="ViewModel.NewAddressToAdd" T="string" Placeholder="New IP Address" Variant="Variant.Outlined"
                                  Validation="IpAddressValidator.Validate" DebounceInterval="500" />
                </MudItem>
                <MudItem xs="1" Class="d-flex align-center">
                    <MudButton Color="Color.Primary" Variant="Variant.Filled" Disabled="@(!ViewModel.CanAddNewIpAddress)" OnClick="@ViewModel.AddNewIpAddress">Add new IP</MudButton>
                </MudItem>
            </MudGrid>
        </MudTabPanel>
        <MudTabPanel Text="Settings" Icon="@Icons.Material.Filled.Settings">
            <Settings />
        </MudTabPanel>
    </MudTabs>

</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        await ViewModel.OnInitializedAsync();
        ViewModel.NotifyStateChange += OnNotify;
    }

    public async Task OnNotify() => await InvokeAsync(StateHasChanged);
}