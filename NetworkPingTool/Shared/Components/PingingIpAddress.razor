@using NetworkPingTool.Model;
@inherits MudComponentBase

<div>
    <MudGrid Class="d-flex align-center">
        <MudItem xs="1" Class="d-flex justify-center">
            <MudCheckBox @bind-Checked="IsDns" />
        </MudItem>
        <MudItem xs="1" Class="d-flex justify-center">
            <MudTextField Variant="Variant.Outlined" @bind-Text="Label" T="string" />
        </MudItem>
        <MudItem xs="3" Class="d-flex justify-center">
            <MudText Color="@(IsActive ? Color.Success : Color.Default)">
                @($"{IpAddress} {(IsActive ? "(Running)" : "(Stopped)")}")
            </MudText>
        </MudItem>
        <MudItem xs="1" Class="d-flex justify-center">
            <PingHealthIcon HealthStatus="@HealthStatus" MinRoundTripTime="@MinRoundTripTime" MaxRoundTripTime="@MaxRoundTripTime"/>
        </MudItem>
        <MudItem xs="1" Class="d-flex justify-center">
            <MudText>@CurrentRoundTripTime</MudText>
        </MudItem>
        <MudItem xs="1" Class="d-flex justify-center">
            <MudText>@AverageRoundTripTime</MudText>
        </MudItem>
        <MudItem xs="1" Class="d-flex justify-center">
            <MudText>@TotalPings</MudText>
        </MudItem>
        <MudItem xs="1" Class="d-flex justify-center">
            <MudText>@TotalFailures</MudText>
        </MudItem>
        <MudItem xs="1" Class="d-flex justify-center">
            <MudIconButton Icon="@(IsActive ? Icons.Material.Filled.Stop : Icons.Material.Filled.PlayArrow)" OnClick="@InvokeButtonClick" Color="Color.Primary" />
        </MudItem>
        <MudItem xs="1" Class="d-flex justify-center">
            <MudIconButton
            Icon="@Icons.Material.Filled.Delete"
            Disabled="@IsActive"
            OnClick="async () => await OnDeleteClicked.InvokeAsync()"
            Color="Color.Error" />
        </MudItem>
    </MudGrid>
</div>
